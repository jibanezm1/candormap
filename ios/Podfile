# Define una función para requerir scripts de node
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve('#{script}', {paths: [process.argv[1]]})", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '13.0'

# Configuración de permisos
setup_permissions([
  'Camera',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  'LocationWhenInUse' # O 'LocationAlways' según lo que necesites
])

# Configuración de Flipper
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

# Configura el enlace de los frameworks según la variable de entorno
linkage = ENV['USE_FRAMEWORKS'] ? ENV['USE_FRAMEWORKS'].to_sym : :static
use_frameworks! :linkage => :static
$RNFirebaseAsStaticFramework = true

target 'candormap' do
  # Google Maps y dependencias relacionadas

  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path
  pod 'Google-Maps-iOS-Utils', '4.2.2'

  # Configuración React Native
  config = use_native_modules!
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'candormapTests' do
    inherit! :complete
    # Agrega aquí pods específicos para testing si es necesario
  end

  # Scripts post-instalación
  post_install do |installer|
    react_native_post_install(installer, config[:reactNativePath], :mac_catalyst_enabled => false)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
